{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { factMutation } from '../graphql/facts/factMutation';\nimport { factQuery } from '../graphql/facts/factQuery';\n\nvar IndexPage = function IndexPage() {\n  var _useState = useState({\n    text: ''\n  }),\n      formState = _useState[0],\n      setFormState = _useState[1];\n\n  var _useQuery = useQuery(factQuery, {\n    ssr: false\n  }),\n      FData = _useQuery.data,\n      FLoading = _useQuery.loading,\n      FError = _useQuery.error;\n\n  var _useMutation = useMutation(factMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      sendFact = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      MFloading = _useMutation2$.loading,\n      MFData = _useMutation2$.data,\n      MFError = _useMutation2$.error;\n\n  return __jsx(Layout, {\n    title: \"Home | Next.js + TypeScript Example\"\n  }, __jsx(\"h2\", null, \"Random facts\"), FLoading && __jsx(\"p\", null, \"loading...\"), FError && __jsx(\"p\", null, \"error...\"), !FLoading && !FError && FData && __jsx(\"p\", null, FData.fact.text), __jsx(\"hr\", null), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return e.preventDefault();\n    }\n  }, __jsx(\"input\", {\n    name: \"text\",\n    id: \"text\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setFormState({\n        text: e.target.value\n      });\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      sendFact({\n        variables: {\n          fact: formState\n        }\n      });\n    }\n  }, \"Odeslat\"), __jsx(\"br\", null), \"error: \", _JSON$stringify(MFError), \" \", __jsx(\"br\", null), \"loading: \", MFloading, \" \", __jsx(\"br\", null), \"data: \", _JSON$stringify(MFData), \" \", __jsx(\"br\", null)), __jsx(\"h1\", null, \"Hello \\uD83D\\uDC4B\"), __jsx(\"p\", null, __jsx(Link, {\n    href: \"/about\"\n  }, __jsx(\"a\", null, \"About neco\"))));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/karelcervicek/Documents/GitHub/reality-solution-demo/pages/index.tsx"],"names":["IndexPage","formState","setFormState","useState","text","FData","FLoading","FError","useQuery","ssr","sendFact","MFloading","MFData","MFError","useMutation","e","value","variables","fact"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link'\nimport Layout from '../components/Layout'\nimport { NextPage } from 'next'\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport { factMutation } from '../graphql/facts/factMutation';\nimport { factQuery, TFactData } from '../graphql/facts/factQuery';\n\nconst IndexPage: NextPage = () => {\n\n  const [formState, setFormState] = useState({ text: '' });\n  const { data: FData, loading: FLoading, error: FError } = useQuery<TFactData>(factQuery, { ssr: false })\n  const [sendFact, { loading: MFloading, data: MFData, error: MFError }] = useMutation(factMutation);\n\n  return (\n    <Layout title=\"Home | Next.js + TypeScript Example\">\n\n      <h2>Random facts</h2>\n      {FLoading && <p>loading...</p>}\n      {FError && <p>error...</p>}\n      {!FLoading && !FError && FData && <p>{FData.fact.text}</p>}\n      <hr />\n      <form onSubmit={(e) => e.preventDefault()}>\n        <input\n          name=\"text\"\n          id=\"text\"\n          type=\"text\"\n          onChange={(e) => setFormState({ text: e.target.value })}\n        />\n        <button\n          type=\"button\"\n          onClick={() => {\n            sendFact({ variables: { fact: formState } });\n          }}\n        >\n          Odeslat\n        </button><br />\n        error: {JSON.stringify(MFError)} <br />\n        loading: {MFloading} <br />\n        data: {JSON.stringify(MFData)} <br />\n      </form>\n\n\n      <h1>Hello ðŸ‘‹</h1>\n      <p>\n        <Link href=\"/about\">\n          <a>About neco</a>\n        </Link>\n      </p>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}